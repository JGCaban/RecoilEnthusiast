@model IEnumerable<RecoilEnthusiast.Models.ProductList>

@{
    ViewBag.Title = "Index";
}

<h2>Products</h2>

<p>
    @Html.ActionLink("Create New", "Create", null, htmlAttributes: new { @class = "btn btn-primary" })
</p>

<style type="text/css">

    .table th, .table td {
        text-align: center;
    }
</style>

@if (TempData.ContainsKey("SaveResult"))
{
    <div class="alert alert-success fade in" role="alert">

        <button type="button" class="close" data-dismiss="alert">
            <span>&times;</span>
        </button>
        @TempData["SaveResult"]
    </div>
}

<table class="table table-borderless myTable">
    <tr class="thead">
        <th>
            @Html.DisplayNameFor(model => model.ProductId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.TypeOfItem)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Model)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ProductId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TypeOfItem)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Model)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.ProductId }, htmlAttributes: new { @class = "btn btn-warning" }) |
                @Html.ActionLink("Details", "Details", new { id = item.ProductId }, htmlAttributes: new { @class = "btn btn-info" }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.ProductId }, htmlAttributes: new { @class="btn btn-danger" })
            </td>
        </tr>
    }
</table>
